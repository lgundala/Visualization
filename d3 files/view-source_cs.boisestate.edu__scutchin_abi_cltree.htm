
<!-- saved from url=(0050)http://cs.boisestate.edu/~scutchin/abi/cltree.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></head><body><div class="line-gutter-backdrop"></div><table><tbody><tr><td class="line-number" value="1"></td><td class="line-content"><span class="html-doctype">&lt;!DOCTYPE html&gt;</span></td></tr><tr><td class="line-number" value="2"></td><td class="line-content"><span class="html-tag">&lt;meta <span class="html-attribute-name">charset</span>="<span class="html-attribute-value">utf-8</span>"&gt;</span></td></tr><tr><td class="line-number" value="3"></td><td class="line-content"><span class="html-tag">&lt;style&gt;</span></td></tr><tr><td class="line-number" value="4"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="5"></td><td class="line-content">circle,</td></tr><tr><td class="line-number" value="6"></td><td class="line-content">path {</td></tr><tr><td class="line-number" value="7"></td><td class="line-content">  cursor: pointer;</td></tr><tr><td class="line-number" value="8"></td><td class="line-content">}</td></tr><tr><td class="line-number" value="9"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="10"></td><td class="line-content">circle {</td></tr><tr><td class="line-number" value="11"></td><td class="line-content">  fill: none;</td></tr><tr><td class="line-number" value="12"></td><td class="line-content">  pointer-events: all;</td></tr><tr><td class="line-number" value="13"></td><td class="line-content">}</td></tr><tr><td class="line-number" value="14"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="15"></td><td class="line-content"><span class="html-tag">&lt;/style&gt;</span></td></tr><tr><td class="line-number" value="16"></td><td class="line-content"><span class="html-tag">&lt;body&gt;</span></td></tr><tr><td class="line-number" value="17"></td><td class="line-content"><span class="html-tag">&lt;script <span class="html-attribute-name">src</span>="<a class="html-attribute-value html-resource-link" target="_blank" href="http://cs.boisestate.edu/~scutchin/abi/d3.v3.min.js">d3.v3.min.js</a>"&gt;</span><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="18"></td><td class="line-content"><span class="html-tag">&lt;script&gt;</span></td></tr><tr><td class="line-number" value="19"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="20"></td><td class="line-content">var margin = {top: 350, right: 480, bottom: 350, left: 480},</td></tr><tr><td class="line-number" value="21"></td><td class="line-content">    radius = Math.min(margin.top, margin.right, margin.bottom, margin.left) - 10;</td></tr><tr><td class="line-number" value="22"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="23"></td><td class="line-content">var hue = d3.scale.category10();</td></tr><tr><td class="line-number" value="24"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="25"></td><td class="line-content">var luminance = d3.scale.sqrt()</td></tr><tr><td class="line-number" value="26"></td><td class="line-content">    .domain([0, 1e6])</td></tr><tr><td class="line-number" value="27"></td><td class="line-content">    .clamp(true)</td></tr><tr><td class="line-number" value="28"></td><td class="line-content">    .range([90, 20]);</td></tr><tr><td class="line-number" value="29"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="30"></td><td class="line-content">var svg = d3.select("body").append("svg")</td></tr><tr><td class="line-number" value="31"></td><td class="line-content">    .attr("width", margin.left + margin.right)</td></tr><tr><td class="line-number" value="32"></td><td class="line-content">    .attr("height", margin.top + margin.bottom)</td></tr><tr><td class="line-number" value="33"></td><td class="line-content">  .append("g")</td></tr><tr><td class="line-number" value="34"></td><td class="line-content">    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");</td></tr><tr><td class="line-number" value="35"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="36"></td><td class="line-content">var partition = d3.layout.partition()</td></tr><tr><td class="line-number" value="37"></td><td class="line-content">    .sort(function(a, b) { return d3.ascending(a.name, b.name); })</td></tr><tr><td class="line-number" value="38"></td><td class="line-content">    .size([2 * Math.PI, radius]);</td></tr><tr><td class="line-number" value="39"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="40"></td><td class="line-content">var arc = d3.svg.arc()</td></tr><tr><td class="line-number" value="41"></td><td class="line-content">    .startAngle(function(d) { return d.x; })</td></tr><tr><td class="line-number" value="42"></td><td class="line-content">    .endAngle(function(d) { return d.x + d.dx ; })</td></tr><tr><td class="line-number" value="43"></td><td class="line-content">    .padAngle(.01)</td></tr><tr><td class="line-number" value="44"></td><td class="line-content">    .padRadius(radius / 3)</td></tr><tr><td class="line-number" value="45"></td><td class="line-content">    .innerRadius(function(d) { return radius / 3 * d.depth; })</td></tr><tr><td class="line-number" value="46"></td><td class="line-content">    .outerRadius(function(d) { return radius / 3 * (d.depth + 1) - 1; });</td></tr><tr><td class="line-number" value="47"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="48"></td><td class="line-content">d3.json("bioabi.json", function(error, root) {</td></tr><tr><td class="line-number" value="49"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="50"></td><td class="line-content">  // Compute the initial layout on the entire tree to sum sizes.</td></tr><tr><td class="line-number" value="51"></td><td class="line-content">  // Also compute the full name and fill color for each node,</td></tr><tr><td class="line-number" value="52"></td><td class="line-content">  // and stash the children so they can be restored as we descend.</td></tr><tr><td class="line-number" value="53"></td><td class="line-content">  partition</td></tr><tr><td class="line-number" value="54"></td><td class="line-content">      .value(function(d) { return d.size; })</td></tr><tr><td class="line-number" value="55"></td><td class="line-content">      .nodes(root)</td></tr><tr><td class="line-number" value="56"></td><td class="line-content">      .forEach(function(d) {</td></tr><tr><td class="line-number" value="57"></td><td class="line-content">        d._children = d.children;</td></tr><tr><td class="line-number" value="58"></td><td class="line-content">        d.sum = d.value;</td></tr><tr><td class="line-number" value="59"></td><td class="line-content">        d.key = key(d);</td></tr><tr><td class="line-number" value="60"></td><td class="line-content">        d.fill = fill(d);</td></tr><tr><td class="line-number" value="61"></td><td class="line-content">      });</td></tr><tr><td class="line-number" value="62"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="63"></td><td class="line-content">  // Now redefine the value function to use the previously-computed sum.</td></tr><tr><td class="line-number" value="64"></td><td class="line-content">  partition</td></tr><tr><td class="line-number" value="65"></td><td class="line-content">      .children(function(d, depth) { return depth &lt; 2 ? d._children : null; })</td></tr><tr><td class="line-number" value="66"></td><td class="line-content">      .value(function(d) { return d.sum; });</td></tr><tr><td class="line-number" value="67"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="68"></td><td class="line-content">  var center = svg.append("circle")</td></tr><tr><td class="line-number" value="69"></td><td class="line-content">      .attr("r", radius / 3)</td></tr><tr><td class="line-number" value="70"></td><td class="line-content">      .on("click", zoomOut);</td></tr><tr><td class="line-number" value="71"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="72"></td><td class="line-content">  center.append("title")</td></tr><tr><td class="line-number" value="73"></td><td class="line-content">      .text("zoom out");</td></tr><tr><td class="line-number" value="74"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="75"></td><td class="line-content">  var path = svg.selectAll("path")</td></tr><tr><td class="line-number" value="76"></td><td class="line-content">      .data(partition.nodes(root).slice(1))</td></tr><tr><td class="line-number" value="77"></td><td class="line-content">    .enter().append("path")</td></tr><tr><td class="line-number" value="78"></td><td class="line-content">      .attr("d", arc)</td></tr><tr><td class="line-number" value="79"></td><td class="line-content">      .style("fill", function(d) { return d.fill; })</td></tr><tr><td class="line-number" value="80"></td><td class="line-content">      .each(function(d) { this._current = updateArc(d); })</td></tr><tr><td class="line-number" value="81"></td><td class="line-content">      .on("click", zoomIn);</td></tr><tr><td class="line-number" value="82"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="83"></td><td class="line-content">  function zoomIn(p) {</td></tr><tr><td class="line-number" value="84"></td><td class="line-content">    if (p.depth &gt; 1) p = p.parent;</td></tr><tr><td class="line-number" value="85"></td><td class="line-content">    if (!p.children) return;</td></tr><tr><td class="line-number" value="86"></td><td class="line-content">    zoom(p, p);</td></tr><tr><td class="line-number" value="87"></td><td class="line-content">  }</td></tr><tr><td class="line-number" value="88"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="89"></td><td class="line-content">  function zoomOut(p) {</td></tr><tr><td class="line-number" value="90"></td><td class="line-content">    if (!p.parent) return;</td></tr><tr><td class="line-number" value="91"></td><td class="line-content">    zoom(p.parent, p);</td></tr><tr><td class="line-number" value="92"></td><td class="line-content">  }</td></tr><tr><td class="line-number" value="93"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="94"></td><td class="line-content">  // Zoom to the specified new root.</td></tr><tr><td class="line-number" value="95"></td><td class="line-content">  function zoom(root, p) {</td></tr><tr><td class="line-number" value="96"></td><td class="line-content">    if (document.documentElement.__transition__) return;</td></tr><tr><td class="line-number" value="97"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="98"></td><td class="line-content">    // Rescale outside angles to match the new layout.</td></tr><tr><td class="line-number" value="99"></td><td class="line-content">    var enterArc,</td></tr><tr><td class="line-number" value="100"></td><td class="line-content">        exitArc,</td></tr><tr><td class="line-number" value="101"></td><td class="line-content">        outsideAngle = d3.scale.linear().domain([0, 2 * Math.PI]);</td></tr><tr><td class="line-number" value="102"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="103"></td><td class="line-content">    function insideArc(d) {</td></tr><tr><td class="line-number" value="104"></td><td class="line-content">      return p.key &gt; d.key</td></tr><tr><td class="line-number" value="105"></td><td class="line-content">          ? {depth: d.depth - 1, x: 0, dx: 0} : p.key &lt; d.key</td></tr><tr><td class="line-number" value="106"></td><td class="line-content">          ? {depth: d.depth - 1, x: 2 * Math.PI, dx: 0}</td></tr><tr><td class="line-number" value="107"></td><td class="line-content">          : {depth: 0, x: 0, dx: 2 * Math.PI};</td></tr><tr><td class="line-number" value="108"></td><td class="line-content">    }</td></tr><tr><td class="line-number" value="109"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="110"></td><td class="line-content">    function outsideArc(d) {</td></tr><tr><td class="line-number" value="111"></td><td class="line-content">      return {depth: d.depth + 1, x: outsideAngle(d.x), dx: outsideAngle(d.x + d.dx) - outsideAngle(d.x)};</td></tr><tr><td class="line-number" value="112"></td><td class="line-content">    }</td></tr><tr><td class="line-number" value="113"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="114"></td><td class="line-content">    center.datum(root);</td></tr><tr><td class="line-number" value="115"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="116"></td><td class="line-content">    // When zooming in, arcs enter from the outside and exit to the inside.</td></tr><tr><td class="line-number" value="117"></td><td class="line-content">    // Entering outside arcs start from the old layout.</td></tr><tr><td class="line-number" value="118"></td><td class="line-content">    if (root === p) enterArc = outsideArc, exitArc = insideArc, outsideAngle.range([p.x, p.x + p.dx]);</td></tr><tr><td class="line-number" value="119"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="120"></td><td class="line-content">    path = path.data(partition.nodes(root).slice(1), function(d) { return d.key; });</td></tr><tr><td class="line-number" value="121"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="122"></td><td class="line-content">    // When zooming out, arcs enter from the inside and exit to the outside.</td></tr><tr><td class="line-number" value="123"></td><td class="line-content">    // Exiting outside arcs transition to the new layout.</td></tr><tr><td class="line-number" value="124"></td><td class="line-content">    if (root !== p) enterArc = insideArc, exitArc = outsideArc, outsideAngle.range([p.x, p.x + p.dx]);</td></tr><tr><td class="line-number" value="125"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="126"></td><td class="line-content">    d3.transition().duration(d3.event.altKey ? 7500 : 750).each(function() {</td></tr><tr><td class="line-number" value="127"></td><td class="line-content">      path.exit().transition()</td></tr><tr><td class="line-number" value="128"></td><td class="line-content">          .style("fill-opacity", function(d) { return d.depth === 1 + (root === p) ? 1 : 0; })</td></tr><tr><td class="line-number" value="129"></td><td class="line-content">          .attrTween("d", function(d) { return arcTween.call(this, exitArc(d)); })</td></tr><tr><td class="line-number" value="130"></td><td class="line-content">          .remove();</td></tr><tr><td class="line-number" value="131"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="132"></td><td class="line-content">      path.enter().append("path")</td></tr><tr><td class="line-number" value="133"></td><td class="line-content">          .style("fill-opacity", function(d) { return d.depth === 2 - (root === p) ? 1 : 0; })</td></tr><tr><td class="line-number" value="134"></td><td class="line-content">          .style("fill", function(d) { return d.fill; })</td></tr><tr><td class="line-number" value="135"></td><td class="line-content">          .on("click", zoomIn)</td></tr><tr><td class="line-number" value="136"></td><td class="line-content">          .each(function(d) { this._current = enterArc(d); });</td></tr><tr><td class="line-number" value="137"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="138"></td><td class="line-content">      path.transition()</td></tr><tr><td class="line-number" value="139"></td><td class="line-content">          .style("fill-opacity", 1)</td></tr><tr><td class="line-number" value="140"></td><td class="line-content">          .attrTween("d", function(d) { return arcTween.call(this, updateArc(d)); });</td></tr><tr><td class="line-number" value="141"></td><td class="line-content">    });</td></tr><tr><td class="line-number" value="142"></td><td class="line-content">  }</td></tr><tr><td class="line-number" value="143"></td><td class="line-content">});</td></tr><tr><td class="line-number" value="144"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="145"></td><td class="line-content">function key(d) {</td></tr><tr><td class="line-number" value="146"></td><td class="line-content">  var k = [], p = d;</td></tr><tr><td class="line-number" value="147"></td><td class="line-content">  while (p.depth) k.push(p.name), p = p.parent;</td></tr><tr><td class="line-number" value="148"></td><td class="line-content">  return k.reverse().join(".");</td></tr><tr><td class="line-number" value="149"></td><td class="line-content">}</td></tr><tr><td class="line-number" value="150"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="151"></td><td class="line-content">function fill(d) {</td></tr><tr><td class="line-number" value="152"></td><td class="line-content">  var p = d;</td></tr><tr><td class="line-number" value="153"></td><td class="line-content">  while (p.depth &gt; 1) p = p.parent;</td></tr><tr><td class="line-number" value="154"></td><td class="line-content">  var c = d3.lab(hue(p.name));</td></tr><tr><td class="line-number" value="155"></td><td class="line-content">  c.l = luminance(d.sum);</td></tr><tr><td class="line-number" value="156"></td><td class="line-content">  return c;</td></tr><tr><td class="line-number" value="157"></td><td class="line-content">}</td></tr><tr><td class="line-number" value="158"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="159"></td><td class="line-content">function arcTween(b) {</td></tr><tr><td class="line-number" value="160"></td><td class="line-content">  var i = d3.interpolate(this._current, b);</td></tr><tr><td class="line-number" value="161"></td><td class="line-content">  this._current = i(0);</td></tr><tr><td class="line-number" value="162"></td><td class="line-content">  return function(t) {</td></tr><tr><td class="line-number" value="163"></td><td class="line-content">    return arc(i(t));</td></tr><tr><td class="line-number" value="164"></td><td class="line-content">  };</td></tr><tr><td class="line-number" value="165"></td><td class="line-content">}</td></tr><tr><td class="line-number" value="166"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="167"></td><td class="line-content">function updateArc(d) {</td></tr><tr><td class="line-number" value="168"></td><td class="line-content">  return {depth: d.depth, x: d.x, dx: d.dx};</td></tr><tr><td class="line-number" value="169"></td><td class="line-content">}</td></tr><tr><td class="line-number" value="170"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="171"></td><td class="line-content">d3.select(self.frameElement).style("height", margin.top + margin.bottom + "px");</td></tr><tr><td class="line-number" value="172"></td><td class="line-content"><br></td></tr><tr><td class="line-number" value="173"></td><td class="line-content"><span class="html-tag">&lt;/script&gt;</span></td></tr><tr><td class="line-number" value="174"></td><td class="line-content"><span class="html-end-of-file"></span></td></tr></tbody></table></body></html>